C51 COMPILER V9.60.0.0   CODE                                                              05/16/2023 12:11:36 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE CODE
OBJECT MODULE PLACED IN code.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          
   2          #include<reg51.h>
   3          
   4          
   5          
   6          
   7          //Function declarations
   8          void cct_init(void);
   9          void delay(int);
  10          void lcdinit(void);
  11          void writecmd(int);
  12          void writedata(char);
  13          void Return(void);
  14          char READ_SWITCHES(void);
  15          char get_key(void);
  16          unsigned int count = 0;
  17          unsigned char val = 0;
  18          //*******************
  19          //Pin description
  20          /*
  21          P2 is data bus
  22          P3.7 is RS
  23          P3.6 is E
  24          P1.0 to P1.3 are keypad row outputs
  25          P1.4 to P1.7 are keypad column inputs
  26          */
  27          //********************
  28          // Define Pins
  29          //********************
  30          sbit RowA = P1^0;     //RowA
  31          sbit RowB = P1^1;     //RowB
  32          sbit RowC = P1^2;     //RowC
  33          sbit RowD = P1^3;     //RowD
  34          
  35          sbit C1   = P1^4;     //Column1
  36          sbit C2   = P1^5;     //Column2
  37          sbit C3   = P1^6;     //Column3
  38          sbit C4   = P1^7;     //Column4
  39          
  40          sbit E    = P3^6;     //E pin for LCD
  41          sbit RS   = P3^7;     //RS pin for LCD
  42          
  43          
  44          int main(void)
  45          {
  46   1         char key;                // key char for keeping record of pressed key
  47   1      
  48   1         cct_init();              // Make input and output pins as required
  49   1         lcdinit();               // Initilize LCD
  50   1      
  51   1         while(1)
  52   1         { 
  53   2           key = get_key();       // Get pressed key
  54   2                
  55   2         writedata(key);        // Echo the key pressed to LCD
C51 COMPILER V9.60.0.0   CODE                                                              05/16/2023 12:11:36 PAGE 2   

  56   2         }
  57   1      }
  58          
  59          
  60          void cct_init(void)
  61          {
  62   1        P0 = 0x00;   //not used
  63   1        P1 = 0xf0;   //used for generating outputs and taking inputs from Keypad
  64   1        P2 = 0x00;   //used as data port for LCD
  65   1        P3 = 0x00;   //used for RS and E   
  66   1      }
  67          
  68          void delay(int a)
  69          {
  70   1         int i;
  71   1         for(i=0;i<a;i++);   //null statement
  72   1      }
  73          
  74          void writedata(char t)
  75          {
  76   1         RS = 1;             // This is data
  77   1         P2 = t;             //Data transfer
  78   1         E  = 1;             // => E = 1
  79   1         delay(150);
  80   1         E  = 0;             // => E = 0
  81   1         delay(150);
  82   1      }
  83          
  84          
  85          void writecmd(int z)
  86          {
  87   1         RS = 0;             // This is command
  88   1         P2 = z;             //Data transfer
  89   1         E  = 1;             // => E = 1
  90   1         delay(150);
  91   1         E  = 0;             // => E = 0
  92   1         delay(150);
  93   1      }
  94          
  95          void lcdinit(void)
  96          {
  97   1      
  98   1           delay(15000);
  99   1         writecmd(0x30);
 100   1           delay(4500);
 101   1         writecmd(0x30);
 102   1           delay(300);
 103   1         writecmd(0x30);
 104   1           delay(650);
 105   1        
 106   1         writecmd(0x38);    //function set
 107   1         writecmd(0x0c);    //display on,cursor off,blink off
 108   1         writecmd(0x01);    //clear display
 109   1         writecmd(0x06);    //entry mode, set increment
 110   1      }
 111          
 112          void Return(void)     //Return to 0 location on LCD
 113          {
 114   1        writecmd(0x02);
 115   1          delay(1500);
 116   1      }
 117          
C51 COMPILER V9.60.0.0   CODE                                                              05/16/2023 12:11:36 PAGE 3   

 118          
 119          
 120          
 121          char READ_SWITCHES(void)  
 122          { 
 123   1        RowA = 0; RowB = 1; RowC = 1; RowD = 1;   
 124   1         
 125   1        if (C1 == 0) 
 126   1         { 
 127   2             count = 0 ;
 128   2            count=count+1;
 129   2            delay(10000);
 130   2            if (C1 == 0)
 131   2            {       
 132   3               count=count+1;
 133   3              delay(10000);
 134   3            }
 135   2            if (C1 == 0) 
 136   2            {
 137   3              count=count+1;
 138   3              delay(10000);
 139   3            }
 140   2            if (C1 == 0) 
 141   2            {
 142   3              count=count+1;
 143   3              delay(10000);
 144   3            }
 145   2            if (C1 == 0) 
 146   2            {
 147   3              count=count+1;
 148   3              delay(10000);
 149   3            }
 150   2      
 151   2      
 152   2           
 153   2              switch (count)
 154   2             {
 155   3              case 2: return '7';break;
 156   3              case 3 : return 'A';break;
 157   3              case 4 : return 'A';break;
 158   3              case 5 : return 'B';break;
 159   3                default :return 'B';break;
 160   3             }        
 161   2           
 162   2         }
 163   1      
 164   1      
 165   1      
 166   1      
 167   1        if (C2 == 0) 
 168   1          
 169   1        
 170   1        { 
 171   2             count = 0 ;
 172   2            count=count+1;
 173   2            delay(10000);
 174   2            if (C2 == 0)
 175   2            {       
 176   3               count=count+1;
 177   3              delay(10000);
 178   3            }
 179   2            if (C2 == 0) 
C51 COMPILER V9.60.0.0   CODE                                                              05/16/2023 12:11:36 PAGE 4   

 180   2            {
 181   3              count=count+1;
 182   3              delay(10000);
 183   3            }
 184   2            if (C2 == 0) 
 185   2            {
 186   3              count=count+1;
 187   3              delay(10000);
 188   3            }
 189   2            if (C2 == 0) 
 190   2            {
 191   3              count=count+1;
 192   3              delay(10000);
 193   3            }
 194   2      
 195   2      
 196   2           
 197   2              switch (count)
 198   2             {
 199   3              case 2: return '8';break;
 200   3              case 3 : return 'C';break;
 201   3              case 4 : return 'C';break;
 202   3              case 5 : return 'D';break;
 203   3              default :return 'D';break;
 204   3             }        
 205   2           
 206   2         }
 207   1      
 208   1        
 209   1         
 210   1         
 211   1         
 212   1        if (C3 == 0) 
 213   1          
 214   1        
 215   1         { 
 216   2             count = 0 ;
 217   2            count=count+1;
 218   2            delay(10000);
 219   2            if (C3 == 0)
 220   2            {       
 221   3               count=count+1;
 222   3              delay(10000);
 223   3            }
 224   2            if (C3 == 0) 
 225   2            {
 226   3              count=count+1;
 227   3              delay(10000);
 228   3            }
 229   2            if (C3 == 0) 
 230   2            {
 231   3              count=count+1;
 232   3              delay(10000);
 233   3            }
 234   2            if (C3 == 0) 
 235   2            {
 236   3              count=count+1;
 237   3              delay(10000);
 238   3            }
 239   2      
 240   2      
 241   2           
C51 COMPILER V9.60.0.0   CODE                                                              05/16/2023 12:11:36 PAGE 5   

 242   2              switch (count)
 243   2             {
 244   3              case 2: return '9';break;
 245   3              case 3 : return 'E';break;
 246   3              case 4 : return 'E';break;
 247   3              case 5 : return 'F';break;
 248   3              default :return 'F';break;
 249   3             }        
 250   2           
 251   2         }
 252   1      
 253   1         
 254   1         
 255   1        if (C4 == 0) 
 256   1          
 257   1        
 258   1        
 259   1       { 
 260   2             count = 0 ;
 261   2            count=count+1;
 262   2            delay(10000);
 263   2            if (C4 == 0)
 264   2            {       
 265   3               count=count+1;
 266   3              delay(10000);
 267   3            }
 268   2            if (C4 == 0) 
 269   2            {
 270   3              count=count+1;
 271   3              delay(10000);
 272   3            }
 273   2            if (C4 == 0) 
 274   2            {
 275   3              count=count+1;
 276   3              delay(10000);
 277   3            }
 278   2            if (C4 == 0) 
 279   2            {
 280   3              count=count+1;
 281   3              delay(10000);
 282   3            }
 283   2      
 284   2      
 285   2           
 286   2              switch (count)
 287   2             {
 288   3              case 2: return '/';break;
 289   3              case 3 : return 'G';break;
 290   3              case 4 : return 'G';break;
 291   3              case 5 : return 'H';break;
 292   3              default :return 'H';break;
 293   3             }        
 294   2           
 295   2         }
 296   1      
 297   1      
 298   1        RowA = 1; RowB = 0; RowC = 1; RowD = 1;   
 299   1      
 300   1        if (C1 == 0) 
 301   1         { 
 302   2             count = 0 ;
 303   2            count=count+1;
C51 COMPILER V9.60.0.0   CODE                                                              05/16/2023 12:11:36 PAGE 6   

 304   2            delay(10000);
 305   2            if (C1 == 0)
 306   2            {       
 307   3               count=count+1;
 308   3              delay(10000);
 309   3            }
 310   2            if (C1 == 0) 
 311   2            {
 312   3              count=count+1;
 313   3              delay(10000);
 314   3            }
 315   2            if (C1 == 0) 
 316   2            {
 317   3              count=count+1;
 318   3              delay(10000);
 319   3            }
 320   2            if (C1 == 0) 
 321   2            {
 322   3              count=count+1;
 323   3              delay(10000);
 324   3            }
 325   2      
 326   2      
 327   2           
 328   2              switch (count)
 329   2             {
 330   3              case 2: return '4';break;
 331   3              case 3 : return 'I';break;
 332   3              case 4 : return 'I';break;
 333   3              case 5 : return 'J';break;
 334   3                default :return 'J';break;
 335   3             }        
 336   2           
 337   2         }
 338   1      
 339   1         
 340   1         
 341   1         
 342   1        if (C2 == 0) 
 343   1          
 344   1        
 345   1        { 
 346   2             count = 0 ;
 347   2            count=count+1;
 348   2            delay(10000);
 349   2            if (C2 == 0)
 350   2            {       
 351   3               count=count+1;
 352   3              delay(10000);
 353   3            }
 354   2            if (C2 == 0) 
 355   2            {
 356   3              count=count+1;
 357   3              delay(10000);
 358   3            }
 359   2            if (C2 == 0) 
 360   2            {
 361   3              count=count+1;
 362   3              delay(10000);
 363   3            }
 364   2            if (C2 == 0) 
 365   2            {
C51 COMPILER V9.60.0.0   CODE                                                              05/16/2023 12:11:36 PAGE 7   

 366   3              count=count+1;
 367   3              delay(10000);
 368   3            }
 369   2      
 370   2      
 371   2           
 372   2              switch (count)
 373   2             {
 374   3              case 2: return '5';break;
 375   3              case 3 : return 'K';break;
 376   3              case 4 : return 'K';break;
 377   3              case 5 : return 'L';break;
 378   3              default :return 'L';break;
 379   3             }        
 380   2           
 381   2         }
 382   1      
 383   1         
 384   1         
 385   1        if (C3 == 0) 
 386   1          
 387   1        
 388   1         { 
 389   2             count = 0 ;
 390   2            count=count+1;
 391   2            delay(10000);
 392   2            if (C3 == 0)
 393   2            {       
 394   3               count=count+1;
 395   3              delay(10000);
 396   3            }
 397   2            if (C3 == 0) 
 398   2            {
 399   3              count=count+1;
 400   3              delay(10000);
 401   3            }
 402   2            if (C3 == 0) 
 403   2            {
 404   3              count=count+1;
 405   3              delay(10000);
 406   3            }
 407   2            if (C3 == 0) 
 408   2            {
 409   3              count=count+1;
 410   3              delay(10000);
 411   3            }
 412   2      
 413   2      
 414   2           
 415   2              switch (count)
 416   2             {
 417   3              case 2: return '6';break;
 418   3              case 3 : return 'M';break;
 419   3              case 4 : return 'M';break;
 420   3              case 5 : return 'N';break;
 421   3              default :return 'N';break;
 422   3             }        
 423   2           
 424   2         }
 425   1      
 426   1        if (C4 == 0) 
 427   1         if (C4 == 0) 
C51 COMPILER V9.60.0.0   CODE                                                              05/16/2023 12:11:36 PAGE 8   

 428   1          
 429   1        
 430   1        
 431   1       { 
 432   2             count = 0 ;
 433   2            count=count+1;
 434   2            delay(10000);
 435   2            if (C4 == 0)
 436   2            {       
 437   3               count=count+1;
 438   3              delay(10000);
 439   3            }
 440   2            if (C4 == 0) 
 441   2            {
 442   3              count=count+1;
 443   3              delay(10000);
 444   3            }
 445   2            if (C4 == 0) 
 446   2            {
 447   3              count=count+1;
 448   3              delay(10000);
 449   3            }
 450   2            if (C4 == 0) 
 451   2            {
 452   3              count=count+1;
 453   3              delay(10000);
 454   3            }
 455   2      
 456   2      
 457   2           
 458   2              switch (count)
 459   2             {
 460   3              case 2: return '*';break;
 461   3              case 3 : return 'O';break;
 462   3              case 4 : return 'O';break;
 463   3              case 5 : return 'P';break;
 464   3              default :return 'P';break;
 465   3             }        
 466   2           
 467   2         }
 468   1        
 469   1        RowA = 1; RowB = 1; RowC = 0; RowD = 1;   
 470   1      
 471   1      
 472   1         if (C1 == 0) 
 473   1         { 
 474   2             count = 0 ;
 475   2            count=count+1;
 476   2            delay(10000);
 477   2            if (C1 == 0)
 478   2            {       
 479   3               count=count+1;
 480   3              delay(10000);
 481   3            }
 482   2            if (C1 == 0) 
 483   2            {
 484   3              count=count+1;
 485   3              delay(10000);
 486   3            }
 487   2            if (C1 == 0) 
 488   2            {
 489   3              count=count+1;
C51 COMPILER V9.60.0.0   CODE                                                              05/16/2023 12:11:36 PAGE 9   

 490   3              delay(10000);
 491   3            }
 492   2            if (C1 == 0) 
 493   2            {
 494   3              count=count+1;
 495   3              delay(10000);
 496   3            }
 497   2      
 498   2      
 499   2           
 500   2              switch (count)
 501   2             {
 502   3              case 2: return '1';break;
 503   3              case 3 : return 'Q';break;
 504   3              case 4 : return 'Q';break;
 505   3              case 5 : return 'R';break;
 506   3                default :return 'R';break;
 507   3             }        
 508   2           
 509   2         }
 510   1      
 511   1         
 512   1         
 513   1         
 514   1        if (C2 == 0) 
 515   1          
 516   1        
 517   1        { 
 518   2             count = 0 ;
 519   2            count=count+1;
 520   2            delay(10000);
 521   2            if (C2 == 0)
 522   2            {       
 523   3               count=count+1;
 524   3              delay(10000);
 525   3            }
 526   2            if (C2 == 0) 
 527   2            {
 528   3              count=count+1;
 529   3              delay(10000);
 530   3            }
 531   2            if (C2 == 0) 
 532   2            {
 533   3              count=count+1;
 534   3              delay(10000);
 535   3            }
 536   2            if (C2 == 0) 
 537   2            {
 538   3              count=count+1;
 539   3              delay(10000);
 540   3            }
 541   2      
 542   2      
 543   2           
 544   2              switch (count)
 545   2             {
 546   3              case 2: return '2';break;
 547   3              case 3 : return 'S';break;
 548   3              case 4 : return 'S';break;
 549   3              case 5 : return 'T';break;
 550   3              default :return 'T';break;
 551   3             }        
C51 COMPILER V9.60.0.0   CODE                                                              05/16/2023 12:11:36 PAGE 10  

 552   2           
 553   2         }
 554   1      
 555   1         
 556   1         
 557   1        if (C3 == 0) 
 558   1          
 559   1        
 560   1         { 
 561   2             count = 0 ;
 562   2            count=count+1;
 563   2            delay(10000);
 564   2            if (C3 == 0)
 565   2            {       
 566   3               count=count+1;
 567   3              delay(10000);
 568   3            }
 569   2            if (C3 == 0) 
 570   2            {
 571   3              count=count+1;
 572   3              delay(10000);
 573   3            }
 574   2            if (C3 == 0) 
 575   2            {
 576   3              count=count+1;
 577   3              delay(10000);
 578   3            }
 579   2            if (C3 == 0) 
 580   2            {
 581   3              count=count+1;
 582   3              delay(10000);
 583   3            }
 584   2      
 585   2      
 586   2           
 587   2              switch (count)
 588   2             {
 589   3              case 2: return '3';break;
 590   3              case 3 : return 'U';break;
 591   3              case 4 : return 'U';break;
 592   3              case 5 : return 'V';break;
 593   3              default :return 'V';break;
 594   3             }        
 595   2           
 596   2         }
 597   1      
 598   1        if (C4 == 0) 
 599   1         if (C4 == 0) 
 600   1          
 601   1        
 602   1        
 603   1       { 
 604   2             count = 0 ;
 605   2            count=count+1;
 606   2            delay(10000);
 607   2            if (C4 == 0)
 608   2            {       
 609   3               count=count+1;
 610   3              delay(10000);
 611   3            }
 612   2            if (C4 == 0) 
 613   2            {
C51 COMPILER V9.60.0.0   CODE                                                              05/16/2023 12:11:36 PAGE 11  

 614   3              count=count+1;
 615   3              delay(10000);
 616   3            }
 617   2            if (C4 == 0) 
 618   2            {
 619   3              count=count+1;
 620   3              delay(10000);
 621   3            }
 622   2            if (C4 == 0) 
 623   2            {
 624   3              count=count+1;
 625   3              delay(10000);
 626   3            }
 627   2      
 628   2      
 629   2           
 630   2              switch (count)
 631   2             {
 632   3              case 2: return '-';break;
 633   3              case 3 : return 'W';break;
 634   3              case 4 : return 'W';break;
 635   3              case 5 : return 'X';break;
 636   3              default :return 'X';break;
 637   3             }        
 638   2           
 639   2         }
 640   1         
 641   1         
 642   1        
 643   1        RowA = 1; RowB = 1; RowC = 1; RowD = 0;   //Test Row D
 644   1      
 645   1        if (C1 == 0) 
 646   1         { delay(10000); while (C1==0); writecmd(0x01); }
 647   1        if (C2 == 0) 
 648   1          
 649   1        
 650   1        { 
 651   2             count = 0 ;
 652   2            count=count+1;
 653   2            delay(10000);
 654   2            if (C2 == 0)
 655   2            {       
 656   3               count=count+1;
 657   3              delay(10000);
 658   3            }
 659   2            if (C2 == 0) 
 660   2            {
 661   3              count=count+1;
 662   3              delay(10000);
 663   3            }
 664   2            if (C2 == 0) 
 665   2            {
 666   3              count=count+1;
 667   3              delay(10000);
 668   3            }
 669   2            if (C2 == 0) 
 670   2            {
 671   3              count=count+1;
 672   3              delay(10000);
 673   3            }
 674   2      
 675   2      
C51 COMPILER V9.60.0.0   CODE                                                              05/16/2023 12:11:36 PAGE 12  

 676   2           
 677   2              switch (count)
 678   2             {
 679   3              case 2: return '0';break;
 680   3              case 3 : return 'Y';break;
 681   3              case 4 : return 'Y';break;
 682   3              case 5 : return 'Z';break;
 683   3              default :return 'Z';break;
 684   3             }        
 685   2           
 686   2         }
 687   1      
 688   1        if (C3 == 0) 
 689   1         { delay(10000); while (C3==0); return '='; }
 690   1        if (C4 == 0) 
 691   1         { delay(10000); while (C4==0); return '+'; }
 692   1      
 693   1        return 'n';             // Means no key has been pressed
 694   1      }
 695          
 696          char get_key(void)           //get key from user
 697          {
 698   1        char key = 'n';              //assume no key pressed
 699   1      
 700   1        while(key=='n')              //wait untill a key is pressed
 701   1          key = READ_SWITCHES();   //scan the keys again and again
 702   1      
 703   1        return key;                  //when key pressed then return its value
 704   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1693    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
