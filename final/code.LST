C51 COMPILER V9.60.0.0   CODE                                                              06/03/2023 13:00:50 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE CODE
OBJECT MODULE PLACED IN code.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          
   2          #include<reg51.h>
   3          
   4          
   5          
   6          
   7          //Function declarations
   8          void cct_init(void);
   9          void delay(int);
  10          void lcdinit(void);
  11          void writecmd(int);
  12          void writedata(char);
  13          
  14          unsigned char READ_SWITCHES(void);
  15          unsigned char get_key(void);
  16          unsigned char count = 0;
  17          
  18          //*******************
  19          //Pin description
  20          /*
  21          P2 is data bus
  22          P3.7 is RS
  23          P3.6 is E
  24          P1.0 to P1.3 are keypad row outputs
  25          P1.4 to P1.7 are keypad column inputs
  26          */
  27          //********************
  28          // Define Pins
  29          //********************
  30          sbit RowA = P2^0;     //RowA
  31          sbit RowB = P2^1;     //RowB
  32          sbit RowC = P2^2;     //RowC
  33          sbit RowD = P2^3;     //RowD
  34          
  35          sbit C1   = P2^4;     //Column1
  36          sbit C2   = P2^5;     //Column2
  37          sbit C3   = P2^6;     //Column3
  38          sbit C4   = P2^7;     //Column4
  39          
  40          sbit RS    = P3^6;     //E pin for LCD
  41          sbit E   = P3^7;     //RS pin for LCD
  42          
  43          
  44          int main(void)
  45          {
  46   1         unsigned char key;                // key char for keeping record of pressed key
  47   1      
  48   1         cct_init();              // Make input and output pins as required
  49   1         lcdinit();               // Initilize LCD
  50   1        TMOD = 0x20;
  51   1        TH1 = 0xFD;
  52   1        SCON = 0x50;
  53   1        TR1 =1;
  54   1         while(1)
  55   1         { 
C51 COMPILER V9.60.0.0   CODE                                                              06/03/2023 13:00:50 PAGE 2   

  56   2           key = get_key();       // Get pressed key
  57   2        writecmd(0x01);        // Clear screen    
  58   2        writedata(key);        // Echo the key pressed to LCD
  59   2        SBUF =key;
  60   2        while (T1 == 0); 
  61   2        T1 = 0; 
  62   2         }
  63   1      }
  64          
  65          
  66          void cct_init(void)
  67          {
  68   1        P2 = 0xf0;   //used for generating outputs and taking inputs from Keypad
  69   1        P0 = 0x00;   //used as data port for LCD
  70   1        P3 = 0x00;   //used for RS and E   
  71   1      }
  72          
  73          
  74          
  75          void delay( int a)
  76          {
  77   1         int i;
  78   1         for(i=0;i<a;i++);   //null statement
  79   1      }
  80          
  81          void writedata(unsigned char t)
  82          {
  83   1         RS = 1;             // This is data
  84   1         P0 = t;             //Data transfer
  85   1         E  = 1;             // => E = 1
  86   1         delay(150);
  87   1         E  = 0;             // => E = 0
  88   1         delay(150);
  89   1      }
  90          
  91          
  92          void writecmd(int z)
  93          {
  94   1         RS = 0;             // This is command
  95   1         P0 = z;             //Data transfer
  96   1         E  = 1;             // => E = 1
  97   1         delay(150);
  98   1         E  = 0;             // => E = 0
  99   1         delay(150);
 100   1      }
 101          
 102          void lcdinit(void)
 103          {
 104   1      
 105   1           delay(15000);
 106   1         writecmd(0x30);
 107   1           delay(4500);
 108   1       
 109   1         writecmd(0x38);    //function set
 110   1         writecmd(0x0c);    //display on,cursor off,blink off
 111   1         writecmd(0x01);    //clear display
 112   1         writecmd(0x06);    //entry mode, set increment
 113   1      }
 114          
 115          //void Return(void)     //Return to 0 location on LCD
 116          //{
 117            //writecmd(0x02);
C51 COMPILER V9.60.0.0   CODE                                                              06/03/2023 13:00:50 PAGE 3   

 118              //delay(1500);
 119          //}
 120          
 121          
 122          
 123          
 124          unsigned char READ_SWITCHES(void) 
 125          { 
 126   1        RowA = 0; RowB = 1; RowC = 1; RowD = 1;   
 127   1        
 128   1      
 129   1         
 130   1        if (C1 == 0) 
 131   1         { 
 132   2             count = 0 ;
 133   2            
 134   2            delay(10000);
 135   2            if (C1 == 0)
 136   2            {       
 137   3               count=count+1;
 138   3              delay(10000);
 139   3            }
 140   2          
 141   2      
 142   2           
 143   2              switch (count)
 144   2             {
 145   3              case 0: return '7';break;
 146   3              case 1 : return 'A';break;
 147   3                default :return 'B';break;
 148   3             }        
 149   2           
 150   2         }
 151   1      
 152   1      
 153   1      
 154   1      
 155   1        if (C2 == 0) 
 156   1          
 157   1        
 158   1        { 
 159   2             count = 0 ;
 160   2        
 161   2            delay(10000);
 162   2            if (C2 == 0)
 163   2            {       
 164   3               count=count+1;
 165   3              delay(10000);
 166   3            }
 167   2            
 168   2      
 169   2           
 170   2              switch (count)
 171   2             {
 172   3              case 0: return '8';break;
 173   3              case 1 : return 'C';break;
 174   3              
 175   3        
 176   3              default :return 'D';break;
 177   3             }        
 178   2           
 179   2         }
C51 COMPILER V9.60.0.0   CODE                                                              06/03/2023 13:00:50 PAGE 4   

 180   1      
 181   1        
 182   1         
 183   1         
 184   1         
 185   1        if (C3 == 0) 
 186   1          
 187   1        
 188   1         { 
 189   2             count = 0 ;
 190   2       
 191   2            delay(10000);
 192   2            if (C3 == 0)
 193   2            {       
 194   3               count=count+1;
 195   3              delay(10000);
 196   3            }
 197   2            
 198   2      
 199   2           
 200   2              switch (count)
 201   2             {
 202   3              case 0: return '9';break;
 203   3              case 1 : return 'E';break;
 204   3              
 205   3              
 206   3              default :return 'F';break;
 207   3             }        
 208   2           
 209   2         }
 210   1      
 211   1         
 212   1         
 213   1        if (C4 == 0) 
 214   1          
 215   1        
 216   1        
 217   1       { 
 218   2             count = 0 ;
 219   2        
 220   2            delay(10000);
 221   2            if (C4 == 0)
 222   2            {       
 223   3               count=count+1;
 224   3              delay(10000);
 225   3            }
 226   2        
 227   2           
 228   2              switch (count)
 229   2             {
 230   3              case 0: return '/';break;
 231   3              case 1 : return 'G';break;
 232   3              
 233   3            
 234   3              default :return 'H';break;
 235   3             }        
 236   2           
 237   2         }
 238   1      
 239   1      
 240   1        RowA = 1; RowB = 0; RowC = 1; RowD = 1;   
 241   1      
C51 COMPILER V9.60.0.0   CODE                                                              06/03/2023 13:00:50 PAGE 5   

 242   1        if (C1 == 0) 
 243   1         { 
 244   2             count = 0 ;
 245   2      
 246   2            delay(10000);
 247   2            if (C1 == 0)
 248   2            {       
 249   3               count=count+1;
 250   3              delay(10000);
 251   3            }
 252   2            
 253   2      
 254   2              switch (count)
 255   2             {
 256   3              case 0: return '4';break;
 257   3              case 1 : return 'I';break;
 258   3      
 259   3                default :return 'J';break;
 260   3             }        
 261   2           
 262   2         }
 263   1      
 264   1         
 265   1         
 266   1         
 267   1        if (C2 == 0) 
 268   1          
 269   1        
 270   1        { 
 271   2             count = 0 ;
 272   2         
 273   2            delay(10000);
 274   2            if (C2 == 0)
 275   2            {       
 276   3               count=count+1;
 277   3              delay(10000);
 278   3            }
 279   2        
 280   2      
 281   2           
 282   2              switch (count)
 283   2             {
 284   3              case 0: return '5';break;
 285   3              case 1 : return 'K';break;
 286   3              
 287   3                  default :return 'L';break;
 288   3             }        
 289   2           
 290   2         }
 291   1      
 292   1         
 293   1         
 294   1        if (C3 == 0) 
 295   1          
 296   1        
 297   1         { 
 298   2             count = 0 ;
 299   2      
 300   2            delay(10000);
 301   2            if (C3 == 0)
 302   2            {       
 303   3               count=count+1;
C51 COMPILER V9.60.0.0   CODE                                                              06/03/2023 13:00:50 PAGE 6   

 304   3              delay(10000);
 305   3            }
 306   2          
 307   2          
 308   2           
 309   2              switch (count)
 310   2             {
 311   3              case 0: return '6';break;
 312   3              case 1 : return 'M';break;
 313   3            
 314   3              default :return 'N';break;
 315   3             }        
 316   2           
 317   2         }
 318   1      
 319   1      
 320   1         if (C4 == 0) 
 321   1          
 322   1        
 323   1        
 324   1       { 
 325   2             count = 0 ;
 326   2      
 327   2            delay(10000);
 328   2            if (C4 == 0)
 329   2            {       
 330   3               count=count+1;
 331   3              delay(10000);
 332   3            }
 333   2          
 334   2           
 335   2              switch (count)
 336   2             {
 337   3              case 0: return '*';break;
 338   3              case 1 : return 'O';break;
 339   3      
 340   3              default :return 'P';break;
 341   3             }        
 342   2           
 343   2         }
 344   1        
 345   1        RowA = 1; RowB = 1; RowC = 0; RowD = 1;   
 346   1      
 347   1      
 348   1         if (C1 == 0) 
 349   1         { 
 350   2             count = 0 ;
 351   2      
 352   2            delay(10000);
 353   2            if (C1 == 0)
 354   2            {       
 355   3               count=count+1;
 356   3              delay(10000);
 357   3            }
 358   2        
 359   2          
 360   2           
 361   2              switch (count)
 362   2             {
 363   3              case 0: return '1';break;
 364   3              case 1 : return 'Q';break;
 365   3      
C51 COMPILER V9.60.0.0   CODE                                                              06/03/2023 13:00:50 PAGE 7   

 366   3                default :return 'R';break;
 367   3             }        
 368   2           
 369   2         }
 370   1      
 371   1         
 372   1         
 373   1         
 374   1        if (C2 == 0) 
 375   1          
 376   1        
 377   1        { 
 378   2             count = 0 ;
 379   2      
 380   2            delay(10000);
 381   2            if (C2 == 0)
 382   2            {       
 383   3               count=count+1;
 384   3              delay(10000);
 385   3            }
 386   2        
 387   2            
 388   2              switch (count)
 389   2             {
 390   3              case 0: return '2';break;
 391   3              case 1 : return 'S';break;
 392   3      
 393   3              default :return 'T';break;
 394   3             }        
 395   2           
 396   2         }
 397   1      
 398   1         
 399   1         
 400   1        if (C3 == 0) 
 401   1          
 402   1        
 403   1         { 
 404   2             count = 0 ;
 405   2      
 406   2            delay(10000);
 407   2            if (C3 == 0)
 408   2            {       
 409   3               count=count+1;
 410   3              delay(10000);
 411   3            }
 412   2          
 413   2        
 414   2      
 415   2           
 416   2              switch (count)
 417   2             {
 418   3              case 0: return '3';break;
 419   3              case 1 : return 'U';break;
 420   3      
 421   3              default :return 'V';break;
 422   3             }        
 423   2           
 424   2         }
 425   1      
 426   1        
 427   1         if (C4 == 0) 
C51 COMPILER V9.60.0.0   CODE                                                              06/03/2023 13:00:50 PAGE 8   

 428   1          
 429   1        
 430   1        
 431   1       { 
 432   2             count = 0 ;
 433   2      
 434   2            delay(10000);
 435   2            if (C4 == 0)
 436   2            {       
 437   3               count=count+1;
 438   3              delay(10000);
 439   3            }
 440   2      
 441   2        
 442   2           
 443   2              switch (count)
 444   2             {
 445   3              case 0: return '-';break;
 446   3              case 1 : return 'W';break;
 447   3      
 448   3              default :return 'X';break;
 449   3             }        
 450   2           
 451   2         }
 452   1         
 453   1         
 454   1        
 455   1        RowA = 1; RowB = 1; RowC = 1; RowD = 0;   //Test Row D
 456   1      
 457   1        if (C1 == 0) 
 458   1         { delay(10000); while (C1==0); writecmd(0x01); }
 459   1        if (C2 == 0) 
 460   1          
 461   1        
 462   1        { 
 463   2             count = 0 ;
 464   2      
 465   2            delay(10000);
 466   2            if (C2 == 0)
 467   2            {       
 468   3               count=count+1;
 469   3              delay(10000);
 470   3            }
 471   2            
 472   2      
 473   2           
 474   2              switch (count)
 475   2             {
 476   3              case 0: return '0';break;
 477   3              case 1 : return 'Y';break;
 478   3      
 479   3              default :return 'Z';break;
 480   3             }        
 481   2           
 482   2         }
 483   1      
 484   1        if (C3 == 0) 
 485   1         { delay(10000); while (C3==0); return '='; }
 486   1        if (C4 == 0) 
 487   1         { delay(10000); while (C4==0); return '+'; }
 488   1      
 489   1        return 'n';             // Means no key has been pressed
C51 COMPILER V9.60.0.0   CODE                                                              06/03/2023 13:00:50 PAGE 9   

 490   1      }
 491          
 492          unsigned char get_key(void)           //get key from user
 493          {
 494   1        char key = 'n';              //assume no key pressed
 495   1      
 496   1        while(key=='n')              //wait untill a key is pressed
 497   1          key = READ_SWITCHES();   //scan the keys again and again
 498   1      
 499   1        return key;                  //when key pressed then return its value
 500   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    650    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
